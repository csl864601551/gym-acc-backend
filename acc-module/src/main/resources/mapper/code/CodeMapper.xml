<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ztl.gym.code.mapper.CodeMapper">

    <resultMap type="Code" id="CodeResult">
        <result property="codeIndex" column="code_index"/>
        <result property="companyId" column="company_id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="status" column="status"/>
        <result property="code" column="code"/>
        <result property="codeAcc" column="code_acc"/>
        <result property="codeType" column="code_type"/>
        <result property="pCode" column="p_code"/>
        <result property="codeAttrId" column="code_attr_id"/>
        <result property="singleId" column="single_id"/>
        <result property="storageType" column="storage_type"/>
        <result property="storageRecordId" column="storage_record_id"/>
        <result property="codeTypeName" column="code_type_name"/>
        <association property="codeAttr" column="code_attr_id"
                     select="com.ztl.gym.code.mapper.CodeAttrMapper.selectCodeAttrById">
        </association>
    </resultMap>

    <resultMap type="CodeVo" id="CodeComplex">
        <result property="codeStr" column="code"/>
        <association property="code" column="code"
                     select="com.ztl.gym.code.mapper.CodeMapper.selectCodeByCode">
        </association>
    </resultMap>

    <sql id="selectCodeVo">
        select code_index, company_id,tenant_id, status, code, code_acc, code_type, p_code, code_attr_id,single_id,
        case when code_type='box' then '箱码' else '单码' end as code_type_name,storage_type,storage_record_id from t_code
    </sql>

    <select id="selectCode" parameterType="Code" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        <where>
            <if test="code != null  and code != ''">and code = #{code}</if>
            <if test="companyId != null  and companyId != ''">and company_id = #{companyId}</if>
        </where>
        limit 1
    </select>

    <select id="selectCodes" parameterType="Map" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        <where>
            <if test="companyId != null  and companyId != ''">and company_id = #{companyId}</if>
            <if test="codes != null  and codes != ''">and code in (
                <foreach collection="codes" item="code" separator=",">
                    #{code}
                </foreach>)
            </if>
        </where>
    </select>

    <select id="selectInCodesByCodeValList" parameterType="Map" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        <where>
            <if test="companyId != null  and companyId != ''">and company_id = #{companyId}</if>
            <if test="codes != null  and codes != ''">and code in (
                <foreach collection="codes" item="code" separator=",">
                    #{code}
                </foreach>)
            </if>
            and (code_type='box' or (code_type='single' and p_code is null))
        </where>
    </select>

    <select id="selectCodeList" parameterType="Code" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        <where>
            <if test="companyId != null ">and company_id = #{companyId}</if>
            <if test="code != null  and code != ''">and code = #{code}</if>
            <if test="codeAcc != null  and codeAcc != ''">and code_acc = #{codeAcc}</if>
            <if test="codeType != null  and codeType != ''">and code_type = #{codeType}</if>
            <if test="pCode != null  and pCode != ''">and p_code = #{pCode}</if>
            <if test="codeAttrId != null ">and code_attr_id = #{codeAttrId}</if>
        </where>
    </select>

    <select id="selectCodeById" parameterType="Long" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        where code_index = #{codeIndex}
    </select>

    <select id="selectCodeByCode" parameterType="String" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        where code = #{value}
    </select>

    <insert id="insertCode" parameterType="Code" useGeneratedKeys="true" keyProperty="codeIndex">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="codeIndex">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_code
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="codeIndex != null">code_index,</if>
            <if test="companyId != null">company_id,</if>
            <if test="status != null">status,</if>
            <if test="code != null">code,</if>
            <if test="codeAcc != null">code_acc,</if>
            <if test="codeType != null">code_type,</if>
            <if test="pCode != null">p_code,</if>
            <if test="codeAttrId != null">code_attr_id,</if>
            <if test="singleId != null">single_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="codeIndex != null">#{codeIndex},</if>
            <if test="companyId != null">#{companyId},</if>
            <if test="status != null">#{status},</if>
            <if test="code != null">#{code},</if>
            <if test="codeAcc != null">#{codeAcc},</if>
            <if test="codeType != null">#{codeType},</if>
            <if test="pCode != null">#{pCode},</if>
            <if test="codeAttrId != null">#{codeAttrId},</if>
            <if test="singleId != null">#{singleId},</if>
        </trim>
    </insert>

    <insert id="insertCodeForBatch">
        insert into t_code(code_index, code, company_id, status, code_acc, code_type, p_code, code_attr_id,single_id)
        values
        <foreach collection="list" item="code" separator=",">
            (#{code.codeIndex}, #{code.code}, #{code.companyId}, #{code.status}, #{code.codeAcc}, #{code.codeType},
            #{code.pCode}, #{code.codeAttrId}, #{code.singleId})
        </foreach>
    </insert>
    <insert id="insertAccCodeForBatch">
        insert into t_code_acc(  company_id,  code_acc, record_id, create_time)
        values
        <foreach collection="list" item="code" separator=",">
            (  #{code.companyId},  #{code.codeAcc},  #{code.recordId}, #{code.createTime})
        </foreach>
    </insert>

    <update id="updateCode" parameterType="Code">
        update t_code
        <trim prefix="SET" suffixOverrides=",">
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="code != null">code = #{code},</if>
            <if test="codeAcc != null">code_acc = #{codeAcc},</if>
            <if test="codeType != null">code_type = #{codeType},</if>
            <if test="pCode != null">p_code = #{pCode},</if>
            <if test="codeAttrId != null">code_attr_id = #{codeAttrId},</if>
            <if test="storageType != null">storage_type = #{storageType},</if>
            <if test="storageRecordId != null">storage_record_id = #{storageRecordId},</if>
        </trim>
        where company_id=#{companyId} and code_index = #{codeIndex}
    </update>
    <update id="updateCodeStorageByPCode" parameterType="Code">
        update t_code
        <trim prefix="SET" suffixOverrides=",">
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
            <if test="storageType != null">storage_type = #{storageType},</if>
            <if test="storageRecordId != null">storage_record_id = #{storageRecordId},</if>
        </trim>
        where company_id=#{companyId} and p_code = #{pCode}
    </update>

    <update id="updateCodeStorageByCode" parameterType="Code">
        update t_code
        <trim prefix="SET" suffixOverrides=",">
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
            <if test="storageType != null">storage_type = #{storageType},</if>
            <if test="storageRecordId != null">storage_record_id = #{storageRecordId},</if>
        </trim>
        where company_id=#{companyId} and code = #{code}
    </update>

    <delete id="deleteCodeById" parameterType="Long">
        delete from t_code where code_index = #{codeIndex}
    </delete>

    <delete id="deleteCodeByIds" parameterType="String">
        delete from t_code where code_index in
        <foreach item="codeIndex" collection="array" open="(" separator="," close=")">
            #{codeIndex}
        </foreach>
    </delete>

    <update id="updateStatusByAttrId" parameterType="Map">
        update t_code_${companyId}
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
        </trim>
        where  company_id = #{companyId} and
        code_attr_id in
        <foreach item="codeAttrId" collection="idList" open="(" separator="," close=")">
            #{codeAttrId}
        </foreach>
    </update>

    <insert id="insertInCodeFlowForBatchSingleV2">
        insert into t_in_code_flow(company_id, code, storage_record_id, create_user, create_time)
        values
        <foreach collection="list" item="code" separator=",">
            (#{companyId}, #{code.code}, #{code.storageRecordId}, #{code.createUser},
            #{code.createTime})
        </foreach>
    </insert>

    <insert id="insertOutCodeFlowForBatchSingleV2">
        insert into t_out_code_flow(company_id, code, storage_record_id, create_user, create_time)
        values
        <foreach collection="list" item="code" separator=",">
            (#{companyId}, #{code.code}, #{code.storageRecordId}, #{code.createUser},
            #{code.createTime})
        </foreach>
    </insert>

    <insert id="insertTransferCodeFlowForBatchSingleV2">
        insert into t_transfer_code_flow(company_id, code, storage_record_id, create_user, create_time)
        values
        <foreach collection="list" item="code" separator=",">
            (#{companyId}, #{code.code}, #{code.storageRecordId}, #{code.createUser},
            #{code.createTime})
        </foreach>
    </insert>

    <insert id="insertBackCodeFlowForBatchSingleV2">
        insert into t_back_code_flow(company_id, code, storage_record_id, create_user, create_time)
        values
        <foreach collection="list" item="code" separator=",">
            (#{companyId}, #{code.code}, #{code.storageRecordId}, #{code.createUser},
            #{code.createTime})
        </foreach>
    </insert>

    <select id="selectInCodeByStorage" parameterType="Map" resultType="String">
        select code from t_in_code_flow where company_id = #{companyId} and storage_record_id = #{storageRecordId}
    </select>

    <select id="selectOutCodeByStorage" parameterType="Map" resultType="String">
        select code from t_out_code_flow where company_id = #{companyId}  and storage_record_id = #{storageRecordId}
    </select>

    <select id="selectTransferCodeByStorage" parameterType="Map" resultType="String">
        select code from t_transfer_code_flow where company_id = #{companyId} and storage_record_id = #{storageRecordId}
    </select>

    <select id="selectBackCodeByStorage" parameterType="Map" resultType="String">
        select code from t_back_code_flow where company_id = #{companyId} and storage_record_id = #{storageRecordId}
    </select>

    <select id="selectCodeListByCodeOrIndex" parameterType="Map" resultMap="CodeResult">
        select code_index,company_id,status,code,code_acc,code_type,p_code,code_attr_id,single_id,
        case when code_type='box' then '箱码' else '单码' end as code_type_name,storage_type,storage_record_id
        from t_code
        <where>
            <if test="companyId != null ">and company_id = #{companyId}</if>
            <if test="code != null  and code != ''">and( code = #{code} or p_code=#{code})</if>
            <if test="indexBegin != null  and indexBegin != ''">and code_index &gt;= #{indexBegin}</if>
            <if test="indexEnd != null  and indexEnd != ''">and code_index &lt;= #{indexEnd}</if>
        </where>
        order by code_index
    </select>


    <select id="selectCodeListByRecord" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        where company_id = #{companyId} and  code_attr_id in
        (select id from t_code_attr where record_id = #{recordId} and company_id = #{companyId})
        order by code_index  asc
    </select>

    <select id="selectCodeListBySingle" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        where company_id = #{companyId} and  single_id = #{singleId}
        order by code_index  asc
    </select>

    <update id="updatePCodeVal" parameterType="Map" >
        update t_code set p_code = #{pCode}  where company_id=#{companyId} and code in
        <foreach item="code" collection="codes" open="(" separator="," close=")">
            #{code}
        </foreach>
    </update>

    <update id="updateCodeAttrIdByPCode" parameterType="Map" >
        update t_code
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="codeAttrId != null">code_attr_id = #{codeAttrId},</if>
            <if test="singleId != null">single_id = #{singleId},</if>
        </trim>
        where company_id=#{companyId} and (p_code = #{pCode} or code = #{pCode})
    </update>

    <update id="updateStatusByIndex" parameterType="Map">
        update t_code_${companyId}
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="codeAttrId != null">code_attr_id = #{codeAttrId},</if>
            <if test="singleId != null">single_id = #{singleId},</if>
        </trim>
        where company_id=#{companyId} and (code_index  &gt;= #{indexStart} and code_index &lt;= #{indexEnd})

    </update>

    <select id="selectCodeRecordBySecurityCode" parameterType="Map" resultMap="CodeResult">
        <include refid="selectCodeVo"/>
        <where>
            <if test="companyId != null  and companyId != ''">and company_id = #{companyId}</if>
            <if test="codeAcc != null  and codes != ''">and code_acc = #{codeAcc}</if>
        </where>
    </select>

    <update id="updatePcodeValIsNan" parameterType="Map" >
        update t_code set p_code = null  where company_id=#{companyId} and p_code = #{pCode}
    </update>
</mapper>
