<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ztl.gym.storage.mapper.ScanRecordMapper">

    <resultMap type="ScanRecord" id="ScanRecordResult">
        <result property="id" column="id"/>
        <result property="companyId" column="company_id"/>
        <result property="code" column="code"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="terminal" column="terminal"/>
        <result property="ip" column="ip"/>
        <result property="address" column="address"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="area" column="area"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="mixType" column="mix_type"/>
    </resultMap>

    <sql id="selectScanRecordVo">
        select id, company_id, code, longitude, latitude, terminal, ip, address, province, city, area, create_user, create_time, update_user, update_time,product_id,product_name from t_scan_record
    </sql>

    <select id="selectScanRecordList" parameterType="ScanRecord" resultMap="ScanRecordResult">
        <include refid="selectScanRecordVo"/>
        <where>
            1=1
            <if test="companyId != null ">and company_id = #{companyId}</if>
            <if test="code != null  and code != ''">and code = #{code}</if>
            <if test="longitude != null  and longitude != ''">and longitude = #{longitude}</if>
            <if test="latitude != null  and latitude != ''">and latitude = #{latitude}</if>
            <if test="terminal != null  and terminal != ''">and terminal = #{terminal}</if>
            <if test="ip != null  and ip != ''">and ip = #{ip}</if>
            <if test="address != null  and address != ''">and address = #{address}</if>
            <if test="province != null  and province != ''">and province = #{province}</if>
            <if test="city != null  and city != ''">and city = #{city}</if>
            <if test="area != null  and area != ''">and area = #{area}</if>
            <if test="createUser != null ">and create_user = #{createUser} </if>
            <if test="updateUser != null ">and update_user = #{updateUser}</if>
            <if test="productName != null ">and product_name like concat('%', #{productName}, '%')</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="type != null and type ==1 "> AND longitude IS NOT NULL
                AND product_id IS NOT NULL </if>
            <if test="type != null and type ==2 "> and create_user != 2  </if>
        </where>
        order BY create_time desc
    </select>



    <select id="selectScanRecordMixList" parameterType="ScanRecord" resultMap="ScanRecordResult">
        select a.id, a.company_id, a.code, a.longitude, a.latitude, a.terminal, a.ip, a.address, a.province, a.city, a.area, a.create_user, a.create_time, a.update_user, a.update_time,a.product_id,a.product_name, b.mix_type from t_scan_record a
        LEFT JOIN (select mix_type,code from t_mix_record GROUP BY code) b ON a.code = b.code
        <where>
            1=1 and a.longitude IS NOT NULL
            AND a.product_id IS NOT NULL
            AND b.mix_type is NOT NULL
            <if test="companyId != null ">and a.company_id = #{companyId}</if>
            <if test="code != null  and code != ''">and a.code = #{code}</if>
            <if test="longitude != null  and longitude != ''">and a.longitude = #{longitude}</if>
            <if test="latitude != null  and latitude != ''">and a.latitude = #{latitude}</if>
            <if test="terminal != null  and terminal != ''">and a.terminal = #{terminal}</if>
            <if test="ip != null  and ip != ''">and a.ip = #{ip}</if>
            <if test="address != null  and address != ''">and a.address = #{address}</if>
            <if test="province != null  and province != ''">and a.province = #{province}</if>
            <if test="city != null  and city != ''">and a.city = #{city}</if>
            <if test="mixType != null  and mixType != ''">and b.mix_type = #{mixType}</if>
            <if test="area != null  and area != ''">and a.area = #{area}</if>
            <if test="createUser != null ">and a.create_user = #{createUser} </if>
            <if test="updateUser != null ">and a.update_user = #{updateUser}</if>
            <if test="productName != null ">and a.product_name like concat('%', #{productName}, '%')</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and a.create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
            <if test="type != null and type ==1 "> AND a.longitude IS NOT NULL
                AND a.product_id IS NOT NULL </if>
            <if test="type != null and type ==2 "> and a.create_user != 2  </if>
        </where>
        order BY a.create_time desc
    </select>

    <select id="selectScanRecordById" parameterType="Long" resultMap="ScanRecordResult">
        <include refid="selectScanRecordVo"/>
        where id = #{id}
    </select>

    <insert id="insertScanRecord" parameterType="ScanRecord" useGeneratedKeys="true" keyProperty="id">
        insert into t_scan_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="companyId != null">company_id,</if>
            <if test="code != null">code,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="terminal != null">terminal,</if>
            <if test="ip != null">ip,</if>
            <if test="address != null">address,</if>
            <if test="province != null">province,</if>
            <if test="city != null">city,</if>
            <if test="area != null">area,</if>
            <if test="createUser != null">create_user,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="productId != null">product_id,</if>
            <if test="productName != null">product_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="companyId != null">#{companyId},</if>
            <if test="code != null">#{code},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="terminal != null">#{terminal},</if>
            <if test="ip != null">#{ip},</if>
            <if test="address != null">#{address},</if>
            <if test="province != null">#{province},</if>
            <if test="city != null">#{city},</if>
            <if test="area != null">#{area},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="productId != null">#{productId},</if>
            <if test="productName != null">#{productName},</if>
        </trim>
    </insert>

    <update id="updateScanRecord" parameterType="ScanRecord">
        update t_scan_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="companyId != null">company_id = #{companyId},</if>
            <if test="code != null">code = #{code},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="terminal != null">terminal = #{terminal},</if>
            <if test="ip != null">ip = #{ip},</if>
            <if test="address != null">address = #{address},</if>
            <if test="province != null">province = #{province},</if>
            <if test="city != null">city = #{city},</if>
            <if test="area != null">area = #{area},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="productId != null">product_id = #{productId},</if>
            <if test="productName != null">product_name = #{productName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteScanRecordById" parameterType="Long">
        delete from t_scan_record where id = #{id}
    </delete>

    <delete id="deleteScanRecordByIds" parameterType="String">
        delete from t_scan_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <resultMap type="HashMap" id="map">
    </resultMap>

    <select id="selectFlowList" resultMap="map">
        SELECT  "入库" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        si.in_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,si.storage_to,
        suc.nick_name as create_user_name
        FROM
        t_in_code_flow_${companyId} as cf
        left join t_storage_in si on si.id=cf.storage_record_id
        left join sys_dept sd on sd.dept_id=si.storage_from
        left join sys_dept sd2 on sd2.dept_id=si.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_storage s on s.id=si.to_storage_id
        left join t_code_${companyId} c on c.`code`=cf.code
        left join t_code_attr ca on ca.id=c.code_attr_id
        left join t_product p on p.id=ca.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "出库" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.out_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_out_code_flow_${companyId} as cf
        left join t_storage_out so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.from_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_code_${companyId} c on c.`code`=cf.code
        left join t_code_attr ca on ca.id=c.code_attr_id
        left join t_product p on p.id=ca.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "退货" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.back_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_back_code_flow_${companyId} as cf
        left join t_storage_back so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.to_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_code_${companyId} c on c.`code`=cf.code
        left join t_code_attr ca on ca.id=c.code_attr_id
        left join t_product p on p.id=ca.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "调拨" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.transfer_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_transfer_code_flow_${companyId} as cf
        left join t_storage_transfer so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.from_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_code_${companyId} c on c.`code`=cf.code
        left join t_code_attr ca on ca.id=c.code_attr_id
        left join t_product p on p.id=ca.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}
        order by create_time desc
    </select>

    <select id="selectScanRecordNum" resultType="java.lang.Integer" parameterType="Map">
        select count(*) from t_scan_record where 1=1
        <if test="deptId != null">
            and company_id = #{deptId}
        </if>
        <if test="type != null and type == 1">
            and create_time &gt;= #{beginTime} and create_time &lt;= #{endTime}
        </if>
        <if test="type != null and type == 2">

        </if>

    </select>

    <select id="selectSecueityRecordNum" resultType="java.lang.Integer" parameterType="Map">
        SELECT count( * ) FROM t_scan_record WHERE 1 = 1 AND create_user != 2
        <if test="deptId != null">
            and company_id = #{deptId}
        </if>
        <if test="type != null and type == 1">
            and create_time &gt;= #{beginTime} and create_time &lt;= #{endTime}
        </if>
        <if test="type != null and type == 2">

        </if>

    </select>

    <!--    type = 0 全部 1 今天 2 昨天 3 最近7天 4 最近30天  5 选择时间-->
    <select id="selectCountByTime" resultType="java.util.Map" parameterType="Map">
        select a.click_date,ifnull(b.count,0) as count
        from (
        SELECT 0 as click_date
        union all
        SELECT 1 as click_date
        union all
        SELECT 2 as click_date
        union all
        SELECT 3 as click_date
        union all
        SELECT 4 as click_date
        union all
        SELECT 5 as click_date
        union all
        SELECT 6 as click_date
        union all
        SELECT 7 as click_date
        union all
        SELECT 8 as click_date
        union all
        SELECT 9 as click_date
        union all
        SELECT 10 as click_date
        union all
        SELECT 11 as click_date
        union all
        SELECT 12 as click_date
        union all
        SELECT 13 as click_date
        union all
        SELECT 14 as click_date
        union all
        SELECT 15 as click_date
        union all
        SELECT 16 as click_date
        union all
        SELECT 17 as click_date
        union all
        SELECT 18 as click_date
        union all
        SELECT 19 as click_date
        union all
        SELECT 20 as click_date
        union all
        SELECT 21 as click_date
        union all
        SELECT 22 as click_date
        union all
        SELECT 23 as click_date
        ) a left join (
        SELECT
        HOUR (create_time) AS hours,
        count(id) AS count
        FROM
        t_scan_record
        WHERE
        1=1
        <if test="deptId != null">
            and company_id = #{deptId}
        </if>
        <if test="type != null and type == 0">

        </if>
        <if test="type != null and type == 1">
            and DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
        </if>
        <if test="type != null and type == 2">
            and TO_DAYS( NOW( ) ) - TO_DAYS( create_time) &lt;= 1
        </if>
        <if test="type != null and type == 3">
            and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(create_time)
        </if>
        <if test="type != null and type == 4">
            and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(create_time)
        </if>
        <if test="type != null and type == 5">
            and DATE_FORMAT(create_time, '%Y-%m-%d') &gt;= DATE_FORMAT(#{beginTime}, '%Y-%m-%d')
            and DATE_FORMAT(create_time, '%Y-%m-%d')&lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        </if>
        GROUP BY
        hours
        ) b on a.click_date = b.hours
        ORDER BY a.click_date
    </select>


    <!--    type =1 最近7天 2 最近30天 3 选择时间  -->
    <select id="selectSecueityRecordByDate" resultType="java.util.Map" parameterType="Map">
        <if test="type != null and type == 1">
            SELECT
            DATE_FORMAT( mycreatedate, '%m-%d' ) AS countKey,
            ifnull( COUNT( pv.create_time ), 0 ) AS countValue
            FROM
            (
            SELECT
            curdate( ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 1 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 2 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 3 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 4 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 5 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 6 DAY ) AS mycreatedate
            ) AS total
            LEFT JOIN t_scan_record pv ON DATE_FORMAT( pv.create_time, '%Y-%m-%d' ) = total.mycreatedate
            <if test="deptId != null">
                and pv.company_id = #{deptId}
            </if>
            GROUP BY
            mycreatedate order by mycreatedate asc
        </if>
        <if test="type != null and type == 2">
            SELECT
            DATE_FORMAT( mycreatedate, '%m-%d' ) AS countKey,
            ifnull( COUNT( pv.create_time ), 0 ) AS countValue
            FROM
            (
            SELECT
            curdate( ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 1 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 2 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 3 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 4 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 5 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 6 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 7 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 8 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 9 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 10 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 11 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 12 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 13 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 14 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 15 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 16 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 17 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 18 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 19 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 20 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 21 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 22 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 23 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 24 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 25 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 26 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 27 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 28 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 29 DAY ) AS mycreatedate
            ) AS total
            LEFT JOIN t_scan_record pv ON DATE_FORMAT( pv.create_time, '%Y-%m-%d' ) = total.mycreatedate
            <if test="deptId != null">
                and pv.company_id = #{deptId}
            </if>
            GROUP BY
            mycreatedate order by mycreatedate asc
        </if>
        <if test="type != null and type == 3">
            SELECT
            days.countKey,
            any_value(ifnull( datas.countValue, 0 )) AS countValue
            FROM
            (-- 数据查询
            SELECT
            date( tfi.create_time ) AS countKey,
            COUNT(  tfi.id ) AS countValue
            FROM
            t_scan_record tfi
            WHERE
            tfi.create_time &lt;= #{endTime} AND tfi.create_time &gt;= #{beginTime}
            <if test="deptId != null">
                and tfi.company_id  = #{deptId}
            </if>
            GROUP BY
            date( tfi.create_time )
            ORDER BY
            date( tfi.create_time )
            ) datas -- 右连接
            RIGHT JOIN (-- 日期查询
            SELECT
            @date := date_add( @date, INTERVAL 1 DAY ) AS countKey
            FROM
            ( SELECT @date := date_add( #{beginTime}, INTERVAL - 1 DAY ) FROM t_scan_record tfi ) days
            HAVING
            @date &lt;= date_add( #{endTime}, INTERVAL - 1 DAY ) AND @date &gt;= date_add( #{beginTime}, INTERVAL - 1 DAY )
            ) days ON datas.countKey = days.countKey
            GROUP BY
            days.countKey
            order by
            days.countKey asc
        </if>
    </select>


    <!--    type =1 最近7天 2 最近30天 3 选择时间  -->
    <select id="selectCountByDate" resultType="java.util.Map" parameterType="Map">
        <if test="type != null and type == 1">
            SELECT
            DATE_FORMAT( mycreatedate, '%m-%d' ) AS countKey,
            ifnull( COUNT( pv.id ), 0 ) AS countValue
            FROM
            (
            SELECT
            curdate( ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 1 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 2 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 3 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 4 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 5 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 6 DAY ) AS mycreatedate
            ) AS total
            LEFT JOIN t_scan_record pv ON DATE_FORMAT( pv.create_time, '%Y-%m-%d' ) = total.mycreatedate AND pv.create_user != 2
            <if test="deptId != null">
                and pv.company_id = #{deptId}
            </if>
            GROUP BY
            mycreatedate order by mycreatedate asc
        </if>
        <if test="type != null and type == 2">
            SELECT
            DATE_FORMAT( mycreatedate, '%m-%d' ) AS countKey,
            ifnull( COUNT( pv.id ), 0 ) AS countValue
            FROM
            (
            SELECT
            curdate( ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 1 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 2 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 3 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 4 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 5 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 6 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 7 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 8 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 9 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 10 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 11 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 12 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 13 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 14 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 15 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 16 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 17 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 18 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 19 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 20 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 21 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 22 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 23 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 24 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 25 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 26 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 27 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 28 DAY ) AS mycreatedate UNION ALL
            SELECT
            date_sub( curdate( ), INTERVAL 29 DAY ) AS mycreatedate
            ) AS total
            LEFT JOIN t_scan_record pv ON DATE_FORMAT( pv.create_time, '%Y-%m-%d' ) = total.mycreatedate and pv.create_user != 2
            <if test="deptId != null">
                and pv.company_id = #{deptId}
            </if>
            GROUP BY
            mycreatedate order by mycreatedate asc
        </if>
        <if test="type != null and type == 3">
            SELECT
            days.countKey,
            any_value(ifnull( datas.countValue, 0 )) AS countValue
            FROM
            (-- 数据查询
            SELECT
            date( tfi.create_time ) AS countKey,
            COUNT(  tfi.id ) AS countValue
            FROM
            t_scan_record tfi
            WHERE
            tfi.create_time &lt;= #{endTime} AND tfi.create_time &gt;= #{beginTime}
            <if test="deptId != null">
                and tfi.company_id  = #{deptId}
            </if>
            AND tfi.create_user != 2
            GROUP BY
            date( tfi.create_time )
            ORDER BY
            date( tfi.create_time )
            ) datas -- 右连接
            RIGHT JOIN (-- 日期查询
            SELECT
            @date := date_add( @date, INTERVAL 1 DAY ) AS countKey
            FROM
            ( SELECT @date := date_add( #{beginTime}, INTERVAL - 1 DAY ) FROM t_scan_record tfi ) days
            HAVING
            @date &lt;= date_add( #{endTime}, INTERVAL - 1 DAY ) AND @date &gt;= date_add( #{beginTime}, INTERVAL - 1 DAY )
            ) days ON datas.countKey = days.countKey
            GROUP BY
            days.countKey
            ORDER BY
            days.countKey  ASC
        </if>
    </select>

    <!--   -->
    <select id="selectSmTop10" resultType="java.util.Map" parameterType="Map">
        SELECT code as code,COUNT(*) as value FROM t_scan_record where 1=1
        <if test="deptId != null">
            and company_id = #{deptId}
        </if>
        and code is not null
        GROUP BY code ORDER BY value DESC LIMIT 10
    </select>


    <select id="selectFlowListAsc" resultMap="map">
        SELECT  "入库" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        si.in_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_id as storage_from_id,sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,si.storage_to,
        suc.nick_name as create_user_name
        FROM
        t_in_code_flow_${companyId} as cf
        left join t_storage_in si on si.id=cf.storage_record_id
        left join sys_dept sd on sd.dept_id=si.storage_from
        left join sys_dept sd2 on sd2.dept_id=si.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_storage s on s.id=si.to_storage_id
        left join t_product p on p.id=si.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "出库" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.out_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_id as storage_from_id,sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_out_code_flow_${companyId} as cf
        left join t_storage_out so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.from_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_product p on p.id=so.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "退货" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.back_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_id as storage_from_id,sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_back_code_flow_${companyId} as cf
        left join t_storage_back so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.to_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_product p on p.id=so.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}

        union all
        select "调拨" as title_name,date_format(cf.create_time,'%Y-%m-%d %T')as create_time,
        so.transfer_no as no_number,cf.code,p.product_name,
        s.storage_name,
        sd.dept_id as storage_from_id,sd.dept_name as storage_from_name,sd2.dept_name as storage_to_name,so.storage_to,
        suc.nick_name as create_user_name
        from  t_transfer_code_flow_${companyId} as cf
        left join t_storage_transfer so on so.id=cf.storage_record_id
        left join t_storage s on s.id=so.from_storage_id
        left join sys_dept sd on sd.dept_id=so.storage_from
        left join sys_dept sd2 on sd2.dept_id=so.storage_to
        LEFT JOIN sys_user suc ON suc.user_id = cf.create_user
        left join t_product p on p.id=so.product_id
        where cf.company_id = #{companyId} and cf.code=#{code}
        order by create_time asc
    </select>


    <select id="selectRLTList" resultType="com.ztl.gym.storage.domain.ScanRecord" parameterType="map">
        select id,product_name,code,longitude,latitude,terminal,create_time from t_scan_record where longitude is not
        null and product_id is not null
        <if test="deptId != null">
            and company_id = #{deptId}
        </if>
    </select>


    <select id="getScanRecordXx" resultType="java.util.Map" parameterType="ScanRecord">
        SELECT
        a.id,
        a.product_name,
        b.photo,
        a.code,
        a.longitude,
        a.latitude,
        a.terminal,
        a.create_time,
        c.mix_type
        FROM
        t_scan_record a
        LEFT JOIN t_product b ON a.product_id = b.id
        LEFT JOIN (select mix_type,code from t_mix_record GROUP BY code) c ON a.code = c.code
        WHERE
        a.longitude IS NOT NULL
        AND a.product_id IS NOT NULL
        AND c.mix_type is NOT NULL
        <if test="companyId != null ">and a.company_id = #{companyId}</if>
        <if test="productName != null ">and a.product_name like concat('%', #{productName}, '%')</if>
        <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
            and a.create_time between #{params.beginCreateTime} and #{params.endCreateTime}
        </if>
        <if test="createUser != null ">and a.create_user = #{createUser} </if>
        <if test="mixType != null  and mixType != ''">and c.mix_type = #{mixType}</if>
        <if test="type != null and type ==1 "> AND a.longitude IS NOT NULL
            AND a.product_id IS NOT NULL </if>
        <if test="type != null and type ==2 "> and a.create_user != 2  </if>

    </select>



    <update id="updateScanRecordByCode" parameterType="ScanRecord">
        update t_scan_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="companyId != null">company_id = #{companyId},</if>
            <if test="code != null">code = #{code},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="terminal != null">terminal = #{terminal},</if>
            <if test="ip != null">ip = #{ip},</if>
            <if test="address != null">address = #{address},</if>
            <if test="province != null">province = #{province},</if>
            <if test="city != null">city = #{city},</if>
            <if test="area != null">area = #{area},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="productId != null">product_id = #{productId},</if>
            <if test="productName != null">product_name = #{productName},</if>
        </trim>
        where code = #{code}
    </update>
</mapper>